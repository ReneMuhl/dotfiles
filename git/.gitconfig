[alias]
    aliases = !git config --list | grep ^alias\\. | cut -c 7- | grep -Ei --color \"$1\" "#"
	amend = commit -a --amend --no-edit
	branches = branch -avv
	co = checkout
	cod = checkout develop
	com = checkout master
	cp = cherry-pick
	df = diff
	dfc = diff --cached
	f = fetch
	glog = log --all --graph --decorate
	in = !sh -c 'git fetch && git log --graph --boundary --left-right --cherry-pick --decorate HEAD..FETCH_HEAD'
	ll = log --pretty=format:'%C(yellow)%h  %C(reset)%s %C(red)%d%C(green)[%cr] %C(blue)[%cn]' --graph --decorate --abbrev-commit
	lla = log --pretty=format:'%C(yellow)%h  %C(reset)%s %C(red)%d%C(green)[%cr] %C(blue)[%cn]' --graph --decorate --abbrev-commit --all
	lls = log --graph --decorate --pretty=format:'%C(red)%h  %C(yellow)%ad %C(red)%d%C(reset) %s %C(blue)[%an]' --abbrev-commit --date=short --all --simplify-by-decoration
	mt = mergetool
	nlog = log --name-status
	out = !sh -c 'git fetch && git log --graph --boundary --left-right --cherry-pick --decorate FETCH_HEAD..HEAD'
	p = pull
	pp = !sh -c 'git push -n && git diff --stat origin `git rev-parse --abbrev-ref HEAD`'
	ppp = !sh -c 'git push -n && git diff origin `git rev-parse --abbrev-ref HEAD`'
	remotes = remote -v
	rb = rebase
	sapply = !sh -c 'git stash apply stash^{/$*}' -
	slist = stash list
	slog = log --all --graph --decorate --pretty=oneline
	sshow = !sh -c 'git stash show stash^{/$*} -p' -
	st = status -uall
	unstage = reset HEAD
	updatedev=!sh -c 'git cod && git p && git co -'
[init]
    templatedir = ~/used_projects/dotfiles/git/templates
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[core]
	editor = vim
	excludesfile = ~/.gitignore
	pager = diff-so-fancy | less --tabs=4 -RFX
	autocrlf = input
	whitespace = warn
[diff]
    renameLimit = 999999
    tool = meld
[difftool "meld"]
    cmd = open -W -a Meld --args \"$LOCAL\" \"$REMOTE\"
    trustExitCode = false
[merge]
    conflictstyle = diff3
    renameLimit = 999999
    tool = meld
[mergetool "meld"]
    cmd = open -W -a Meld --args --auto-merge \"$PWD/$LOCAL\" \"$PWD/$BASE\" \"$PWD/$REMOTE\" --output=\"$PWD/$MERGED\"
[push]
	default = current
[user]
	email = rmuhl@mailbox.org
	name = Ren√© Muhl
[transfer]
    fsckobjects = true
[fetch]
    fsckobjects = true
[receive]
    fsckObjects = true
[tig]
	main-view = \
		date:default \
		id:yes,color \
		author:full \
		commit-title:graph=v2,refs=yes
	ignore-case = true
	line-graphics = utf-8
[rerere]
	enabled = true
[mergetool]
	keepBackup = false
[rebase]
	autosquash = true
[branch]
	autosetupmerge = always
	autosetuprebase = always
